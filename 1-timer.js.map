{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const startBtn = document.querySelector('button[data-start]');\n  const dataDays = document.querySelector('span[data-days]');\n  const dataHours = document.querySelector('span[data-hours]');\n  const dataMinutes = document.querySelector('span[data-minutes]');\n  const dataSeconds = document.querySelector('span[data-seconds]');\n  const dateInput = document.querySelector('#datetime-picker');\n\n  let countdownInterval = null;\n  let selectedFutureDate = null;\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      selectedFutureDate = selectedDates[0];\n      checkSelectedDate();\n    },\n  };\n\n  flatpickr('#datetime-picker', options);\n  startBtn.disabled = true;\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  startBtn.addEventListener('click', onStartBtnClick);\n\n  function onStartBtnClick() {\n    if (!selectedFutureDate || selectedFutureDate.getTime() <= Date.now()) {\n      iziToast.error({\n        title: 'Помилка',\n        message: 'Будь ласка, оберіть майбутню дату та час!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    dateInput.disabled = true;\n    startBtn.disabled = true;\n\n    startCountdown(selectedFutureDate.getTime());\n  }\n\n  function checkSelectedDate() {\n    const currentTime = Date.now();\n    if (selectedFutureDate && selectedFutureDate.getTime() <= currentTime) {\n      iziToast.error({\n        title: 'Помилка',\n        message: 'Будь ласка, оберіть дату та час у майбутньому!',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  }\n\n  function startCountdown(targetDateMs) {\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n    }\n\n    countdownInterval = setInterval(() => {\n      const deltaMs = targetDateMs - Date.now();\n\n      if (deltaMs <= 0) {\n        clearInterval(countdownInterval);\n        updateClockFace({\n          days: '00',\n          hours: '00',\n          minutes: '00',\n          seconds: '00',\n        });\n        iziToast.success({\n          title: 'Готово',\n          message: 'Відлік часу завершено!',\n          position: 'topRight',\n        });\n        dateInput.disabled = false;\n        startBtn.disabled = true;\n        return;\n      }\n\n      const timeRemaining = convertMs(deltaMs);\n      updateClockFace(timeRemaining);\n    }, 1000);\n  }\n\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = addLeadingZero(Math.floor(ms / day));\n    const hours = addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    const seconds = addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n\n  function updateClockFace({ days, hours, minutes, seconds }) {\n    dataDays.textContent = days;\n    dataHours.textContent = hours;\n    dataMinutes.textContent = minutes;\n    dataSeconds.textContent = seconds;\n  }\n\n  checkSelectedDate();\n});\n"],"names":["startBtn","dataDays","dataHours","dataMinutes","dataSeconds","dateInput","countdownInterval","selectedFutureDate","flatpickr","selectedDates","checkSelectedDate","addLeadingZero","value","onStartBtnClick","iziToast","startCountdown","currentTime","targetDateMs","deltaMs","updateClockFace","timeRemaining","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2FAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,kBAAkB,EAE3D,IAAIC,EAAoB,KACpBC,EAAqB,KAazBC,EAAU,mBAXM,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAqBE,EAAc,CAAC,EACpCC,GACD,CACL,CAEuC,EACrCV,EAAS,SAAW,GAEpB,SAASW,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEDZ,EAAS,iBAAiB,QAASa,CAAe,EAElD,SAASA,GAAkB,CACzB,GAAI,CAACN,GAAsBA,EAAmB,QAAO,GAAM,KAAK,MAAO,CACrEO,EAAS,MAAM,CACb,MAAO,UACP,QAAS,4CACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDT,EAAU,SAAW,GACrBL,EAAS,SAAW,GAEpBe,EAAeR,EAAmB,QAAO,CAAE,CAC5C,CAED,SAASG,GAAoB,CAC3B,MAAMM,EAAc,KAAK,MACrBT,GAAsBA,EAAmB,QAAO,GAAMS,GACxDF,EAAS,MAAM,CACb,MAAO,UACP,QAAS,iDACT,SAAU,UAClB,CAAO,EACDd,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CAED,SAASe,EAAeE,EAAc,CAChCX,GACF,cAAcA,CAAiB,EAGjCA,EAAoB,YAAY,IAAM,CACpC,MAAMY,EAAUD,EAAe,KAAK,IAAG,EAEvC,GAAIC,GAAW,EAAG,CAChB,cAAcZ,CAAiB,EAC/Ba,EAAgB,CACd,KAAM,KACN,MAAO,KACP,QAAS,KACT,QAAS,IACnB,CAAS,EACDL,EAAS,QAAQ,CACf,MAAO,SACP,QAAS,yBACT,SAAU,UACpB,CAAS,EACDT,EAAU,SAAW,GACrBL,EAAS,SAAW,GACpB,MACD,CAED,MAAMoB,EAAgBC,EAAUH,CAAO,EACvCC,EAAgBC,CAAa,CAC9B,EAAE,GAAI,CACR,CAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAOZ,EAAe,KAAK,MAAMW,EAAK,KAAG,CAAC,EAC1CE,EAAQb,EAAe,KAAK,MAAOW,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUd,EAAe,KAAK,MAAQW,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUf,EACd,KAAK,MAASW,EAAK,MAAO,KAAQ,IAAU,GAAM,CACxD,EAEI,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAASP,EAAgB,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DzB,EAAS,YAAcsB,EACvBrB,EAAU,YAAcsB,EACxBrB,EAAY,YAAcsB,EAC1BrB,EAAY,YAAcsB,CAC3B,CAEDhB,GACF,CAAC"}